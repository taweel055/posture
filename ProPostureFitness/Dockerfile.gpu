# ProPostureFitness Docker Image - GPU Enabled
# For NVIDIA GPU acceleration
# Image name: fitlifeposture:gpu

FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install Python and system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-venv \
    python3-pip \
    build-essential \
    cmake \
    git \
    wget \
    unzip \
    pkg-config \
    libgtk-3-0 \
    libglib2.0-0 \
    libgstreamer1.0-0 \
    libgstreamer-plugins-base1.0-0 \
    libavcodec58 \
    libavformat58 \
    libswscale5 \
    libv4l-0 \
    libxvidcore4 \
    libx264-155 \
    libatlas3-base \
    libgfortran5 \
    libgomp1 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libcairo2 \
    v4l-utils \
    libpangoft2-1.0-0 \
    fonts-liberation \
    # X11 for GUI support
    libx11-6 \
    libxext6 \
    libxrender1 \
    libxinerama1 \
    libxi6 \
    libxrandr2 \
    libxcursor1 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxft2 \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV DISPLAY=:0
ENV QT_X11_NO_MITSHM=1
ENV CUDA_VISIBLE_DEVICES=0

# Create app user
RUN useradd -m -s /bin/bash fitlife && \
    usermod -a -G video fitlife

# Create app directory
WORKDIR /app

# Copy requirements
COPY requirements.txt /app/

# Install Python dependencies including GPU packages
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir \
        torch==2.0.1+cu118 \
        torchvision==0.15.2+cu118 \
        --index-url https://download.pytorch.org/whl/cu118 && \
    pip install --no-cache-dir cupy-cuda11x

# Copy application files
COPY . /app/

# Create necessary directories with proper permissions
RUN mkdir -p /app/logs /app/reports /app/data/temp /app/models && \
    chown -R fitlife:fitlife /app

# Switch to non-root user
USER fitlife

# Expose port for potential web interface
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD python -c "import cv2; import mediapipe; import torch; print(f'GPU available: {torch.cuda.is_available()}')" || exit 1

# Default command - GPU accelerated version
CMD ["python", "gpu_accelerated_posture_system.py"]
